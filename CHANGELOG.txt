PircBotX Changelog

For more details see the Mercurial changelog at http://code.google.com/p/pircbotx/source/list

--------------------------------------------------
1.3 Beta2 - June 20th, 2011
--------------------------------------------------

The goal of this release was more bug fixing, implementing feature requests, and 
cleaning up the API. As this beta period was quite long, the change log is large.

WARNING: If you are directly upgrading from Beta1 to Beta2 the API has significantly 
changed. If your bot suddenly won't compile, try other ways to accomplish what 
your wanting to do (Eg opping with the Channel object instead of the User object) 
or consult the change log.

 - Fixed  Issue #5  and  Issue #4  where output thread wouldn't even start or 
   throw an exception
 - Fixed potential issues where various commands or messages would create Channels.
 - Fixed issue where User and Channel's hashcode and equals implementation would 
   mess up storage in ManyToManyMap which is backed by HashMaps and HashSets
 - Removed duplicate concept of "Removing" from ManyToManyMap as there is already 
   delete methods
 - Fixed issues of memory leaks with better cleanup of User to Channel ManyToManyMap
 - Cleaned up, updated, and better documented PircBotXExample. Now highlights 
   important features in PircBotX. More to come
 - Fixed  Issue #3  and others where Channels would be created from commands, 
   messages, and other non-channel text.
 - Fixed  Issue #8  where Channel creation handling was wrong again
 - Finished renaming event.getSource() methods to getUser() to follow naming 
   convention. Only events that have a source and recipient still have a 
   getSource() method
 - Finished renaming event.getTarget() methods to getChannel() to follow naming 
   convention.
 - Changed InviteEvent to receive the string version of the user instead of a 
   user object since the user might not be in one of our channels
 - Fixed issue where user's hostmask and login wouldn't be set on JOIN
 - New method channelExists(String)
 - Fixed issue where users wouldn't be associated with the channel they just joined
 - Fixed issue where possible exceptions could be thrown from a user leaving the 
   channel or server
 - Fixed  Issue #9  where InviteEvent would provide very wrong information. 
   Reported upstream as well
 - Cleaned and overhauled channel mode parsing and getting channel mode. Now 
   channel mode is mostly guaranteed to be accurate.
 - Depreciated GenericListenerManager. With various internal functionality 
   depending on a threaded bot and the simpleness of the listener manager it 
   should not be used anymore.
 - Can now get ops and users in channel with getOps() and getVoices()
 - Removed PircBotX.channelExists(Channel chan) since it has a very small usage 
   scenario
 - Fixed  Issue #10  where the person who set the voice or op would be labeled 
   as the voice or op instead of the person that received it
 - Fixed issue of disassociating the wrong user from the channel
 - Added package level Javadocs to all packages
 - Added feature request in  Issue #14  where you can authenticate to Nickserv 
   without having to do it in a ConnectEvent listener
 - Massively overhauled all Event object Javadocs. This includes removing all 
   references to the "PircBot abstract class", updating example code, and fixing 
   links.
 - Merged OpEvent and DeOpEvent, and VoiceEvent and DeVoice event into a single 
   event: OpEvent and VoiceEvent. To see if the mode was given or taken call 
   isOp() or isVoice()
 - Fixed broken NAMES command parsing
 - Added support for HalfOps, SuperOps, and Founders per feature request in 
   Issue #11.
 - Removed send methods that took Event as the first parameter. There was way 
   too many assumptions going on there and most likely didn't work as expected 
   as implemented
 - New method PircBotX.sendCTCPCommand(Channel target, String command) to send 
   a CTCP command to a channel
 - Renamed getSource() to getUser() in DCC classes to follow naming convention.
 - Renamed Utils.getSource() to getUser() to follow naming convention
 - New method respond() in all event classes. Allows one to respond very easily 
   to all events. Documentation and Wiki page to follow.
 - Fixed  Issue #15  and possibly other issues where no quit message or other 
   message messed up processing and threw a StringIndexOutOfBoundsException
 - New method getUserBot() to get the bots user object. Simply a shortcut to the 
   uglier bot.getUser(bot.getNick())
 - Internally map names to user objects for faster lookup (old method simply 
   looped over all the users and compared names)
 - Full support for alternative PircBotX subclasses in Event and Listener system. 
   There was some support for PircBotX subclasses but not much and it never 
   really worked. Now however all events and listeners have generic parameters 
   that can make them work with other bots
 - User and Channel classes now have package private constructors. This prevents 
   others from creating useless Channel and User objects
 - Support for Channel Founder dropped in favor of Channel Owner. Channel Founders 
   just aren't on as many servers and are very difficult to separate from owners. 
   This means that FounderEvent was removed while OwnerEvent was added
 - New methods added to set and remove founder, superop, and halfop status: 
   halfOp(), deHalfOp(), superOp(), deSuperOp(), owner(), and deOwner() - More 
   info at the wiki page Features's Support for Halffops, Superops and Owners
   section
 - Removed useless utility method HookUtils.getListeners()
 - Changed HookUtils.getEvents() to get events from ListenerAdapter instead of 
   the (out of date) event list. Now 100% guaranteed to get all the events 
   PircBotX supports
 - Fixed bug where a person was still considered identified even if they had a 
   tilde in their login.
 - Fixed major bug where existing channel users weren't added to the list of 
   users in the channel.
 - New method Channel.getNormalUsers() to get all non-special users in the channel. 
   This will return all users that aren't ops, have voice, superops, halops, or 
   owners in the channel
 - Fixed issue where bot thought that its nick was PircBotX (default name set)
 - Added Hello World example to PircBotX example
 - Updated MultiBotManager with a more useful getBots() method, working and 
   updated listener manager support, and another overload of the connectAll method.
 - ThreadListenerManager now by default runs all listeners in separate threads 
   instead of each batch of listeners in a separate thread
 - Fixed issue where getting an unknown key from ManyToManyMap caused an NPE. 
   This caused havoc in some Channel methods
 - When a User quits remove their references from internal HalfOp, SuperOp, and 
   Owner lists in Channel
 - Removed voice, deVoice, op, and deOp methods from User since they duplicate 
   functionality. Using the user object's operator methods wasn't all that useful 
   anyway since there wasn't methods for HalfOp, SuperOp, and Owner statuses. 
   Instead of add those methods, all user channel status methods were removed
 - Added new methods to Channel for user status (HalfOp, SuperOp, and Owner) 
   management: Checking if a user has the status, giving a user the status, and 
   removing a status from a user.
 - Added new methods to User to get channels that the user has special status in: 
   getChannelsOpIn(), getChannelsVoiceIn(), getChannelsOwnerIn(), 
   getChannelsHalfOpIn(), getChannelsSuperOpIn()
 - Support for extending User and Channel objects was added. This includes
    - The important custom ManyToManyMap that holds all user to channel mappings 
      has moved from an anonymous field to a subclass in PircBotX called UserChannelMap. 
      It has generics to allow subsituting subclassed User and Channel objects
    - Channel and User's constructors now have protected instead of package-private 
      access, allowing subclassing.
    - To take advantage of this, override getUser() and getChannel() in the PircBotX 
      class so that they create your custom User instead of the provided User. 
 - Added new overload for setMode that takes vararg parameters of modes per feature 
   request in  Issue #21 . This makes mode setting cleaner (and faster) than basic 
   string concatenation.
 - Added new methods to set supported modes per feature requests in  Issue #21  
   and  Issue #26 : setChannelLimit, removeChannelLimit(), setChannelKey(), 
   removeChannelKey(), setInviteOnly(), removeInviteOnly(), setModerated(), 
   removeModerated(), setNoExternalMessages(), removeNoExternalMessages(), 
   setSecret(), removeSecret(), setTopicProtection(), removeTopicProtection(). 
   See Javadoc for more information
 - User.getChannels() returns a Set instead of a Collection just like most user 
   and channel methods in PircBotX
 - Per  Issue #20  a new object was created called UserSnapshot that shows a user's 
   status in a moment of time. This is used by QuitEvent which returns a UserSnapshot 
   instead of a plain User in getUser(). Before this all methods about channels a User 
   has been in would be blank.
 - ListenerAdapter updated to support Generic event interfaces. This allows you 
   to for example capture ALL user messages (channel message, channel action, 
   channel notice, private message) in a single method. See Javadoc and the methods 
   prefixed with onGeneric
 - Generic event interfaces cleaned of old or unused interfaces, updated to support 
   Generics like the rest of the event system, added new Generic event interfaces, 
   updated again with the useful generic Event methods (getBot(), getTimestamp(), 
   respond())
 - ListenerAdapter will now through all caught exceptions instead of printing to 
   the console in certain edge cases (wraps exceptions that are higher than 
   Exception or that don't have a bot in a RuntimeException and throws that instead)
 - Updated InputThread.isConnected() to report the actual connected status 
   instead of always true. Fixed ugly SocketExceptions that would be generated 
   in certain edge cases in  Issue #24 
 - Return correct responses in Channel.getHalfOps, getOwners, and getSuperOps 
   that caused havoc in  Issue #23 
 - New method PircBotX.cycle() per Feature Request in  Issue #22 . Parts and 
   Joins the given channel, useful for obtaining auto-privileges in Channels. 
   A version that takes a channel key is also provided.
 - Fixed ActionEvent's respond method to send a response to the User that sent 
   the action if there is no channel instead of sending an invalid line to the 
   server
 - Updated partChannel(), ban(), and unBan()'s method signatures to take Channel 
   objects instead of String channels. 
 - Moved project to the Sonatype and Maven Central repository. To accomplish 
   this the project was moved in maven from the org group to the org.pircbotx group
 - Added JMeter test class for load testing 

And lastly at no particular point in time (happened everywhere)

 - Tons of unit testing added. One of the primary goals of this beta was to write 
   more unit tests in order to ensure stability. While there are still large gaps, 
   most of the main functionality has unit tests with more on the way.
 - Documentation added to various undocumented methods and classes. Existing 
   documentation was also fixed and updated in multiple places.


--------------------------------------------------
1.3 Beta1 - March 3rd, 2011
--------------------------------------------------

 - Renamed a few event methods from getSource() to getUser()
 - ListenerManager.addListener() returns true if adding Listener was successful
 - New method ListenerManager.listenerExists() for checking if a Listener exists
 - New method PircBotX.isVerbose() for getting current verbose value
 - New method PircBotX.isAutoNickChange() for seeing if automatic nick changing 
   due to the name already being taken is turned on
 - New class MultiBotManager for easily creating multiple bots
 - Deploy maven site and Javadoc to http://site.pircbotx.googlecode.com/hg/index.html
 - PircBotx.startIdentServer() returns the started Ident server in case something 
   needs it
 - New feature waitFor() - Can wait for an event inside of a listener. Example: 
   Have a conversation with a user (sending a message, waiting for a response, 
   responding to the response) in a single call.
 - Moved ListenerManager's to org.pircbotx.hooks.managers
 - New ListenerManager: ThreadedListenerManager. Executes hooks in separate 
   threads from the Input Thread. Now the default ListenerManager
 - Fixed bug in the initial WHO and MODE commands sent when a channel was joined 
   which sent NULL instead of the channel name
 - When the JVM shuts down, calls PircBotX.disconnect() and PircBotX.dispose() 
   to properly shut down the bot
 - Input log lines are now prefixed with <<< to signal that they are coming in
 - New field in TopicEvent: date - Says when the topic was created
 - Moved Maven project to org groupId vs PircBotX. All projects using the old 
   groupId need to update - This should be the last major change to the maven 
   location or version number
 - Various Javadoc additions and updates
 - MultiBotManager requires a name in constructor.
 - PircBotX's logException and log methods now synchronize on the same object 
   to prevent them from stepping on each other
 - ThreadFactory has been removed as it has questionable usefulness. Any project 
   wishing to mark the Input or Output thread just needs to see if the Thread is 
   an instance of InputThread or OutputThread
 - ListenerManager is now fully Generic allowing any ListenerManager and Listener 
   use any PircBotX subclass they want
 - Renamed the last fields that were prefixed with _. Projects who have extended 
   core PircBotX classes need to update their code to new variable names
 - Removed many old String based methods of sending messages, opping, voicing, 
   etc since all require being in the channel. This is done simply to clean up 
   the method list
 - Can now send messages to a user in a channel easily with a sendMessage(Channel,
   User,Message) method. Sends to specified channel in format "User: message"


--------------------------------------------------
1.1 - 1.2
--------------------------------------------------

 - Multiple rewrites and updates. Version tracking wasn't followed yet, so its 
   difficult to come up with an exact changelist. 


--------------------------------------------------
1.0 - First Release
--------------------------------------------------

 - Finish rewrite with new event system, as well as various other changes 